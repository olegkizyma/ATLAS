#!/bin/bash

# ATLAS System Startup Script
# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫—É –ø–æ–≤–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ ATLAS
# –í–∫–ª—é—á–∞—î: Goose AI Agent, Frontend Interface, Ukrainian TTS

# –§—É–Ω–∫—Ü—ñ—è –∑—É–ø–∏–Ω–∫–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤
stop_processes() {
    echo "üõë –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏..."
    pkill -f goosed && echo "   ‚úì –ó—É–ø–∏–Ω–µ–Ω–æ AI Agent"
    pkill -f atlas_minimal && echo "   ‚úì –ó—É–ø–∏–Ω–µ–Ω–æ Frontend"
    pkill -f mcp_tts && echo "   ‚úì –ó—É–ø–∏–Ω–µ–Ω–æ TTS"
    sleep 3
    echo "‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    echo ""
}

# –°–ø–æ—á–∞—Ç–∫—É –∑—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏
stop_processes

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–≤–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ ATLAS..."
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "ü§ñ AI Agent + üåê Frontend + üó£Ô∏è Ukrainian TTS"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é goose
cd /Users/dev/Documents/GitHub/ATLAS/goose

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å—Ä–µ–¥—ã Hermit
echo "‚öôÔ∏è  –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Hermit..."
source bin/activate-hermit

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ goose
if [ ! -f "target/release/goosed" ]; then
    echo "üî® –°–±–æ—Ä–∫–∞ AI Agent —Å–µ—Ä–≤–µ—Ä–∞..."
    cargo build --release -p goose-server
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ AI Agent —Å–µ—Ä–≤–µ—Ä–∞"
        exit 1
    fi
fi

echo "‚úÖ AI Agent —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤"

# –ó–∞–ø—É—Å–∫ goosed –≤ —Ñ–æ–Ω–µ
echo "ü§ñ –ó–∞–ø—É—Å–∫ AI Agent —Å–µ—Ä–≤–µ—Ä–∞ (port 3000)..."
# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
env > /tmp/goose_env.txt
./target/release/goosed agent > /tmp/goose.log 2>&1 &
GOOSE_PID=$!
echo "   PID: $GOOSE_PID"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–æ—Ü–µ—Å –∑–∞–ø—É—â–µ–Ω–æ
if ! kill -0 $GOOSE_PID 2>/dev/null; then
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ AI Agent. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: tail -f /tmp/goose.log"
    exit 1
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ goose
sleep 3

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ mcp_tts_ukrainian –¥–ª—è –∑–∞–ø—É—Å–∫–∞ TTS
cd /Users/dev/Documents/GitHub/ATLAS/mcp_tts_ukrainian

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è TTS
if [ ! -d "tts_venv" ]; then
    echo "‚ö†Ô∏è TTS –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—î–º–æ..."
    python3 -m venv tts_venv
    source tts_venv/bin/activate
    
    echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤ –¥–ª—è TTS..."
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –±–∞–∑–æ–≤—ñ –ø–∞–∫–µ—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É
    pip install -U pip wheel setuptools
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ gtts —Ç–∞ pygame
    echo "   üîÑ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è pygame —Ç–∞ gtts..."
    pip install pygame gtts
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ ukrainian-tts
    echo "   üîÑ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è ukrainian-tts..."
    pip install git+https://github.com/robinhad/ukrainian-tts.git
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
    if python3 -c "import pygame; import gtts; import ukrainian_tts" 2>/dev/null; then
        echo "‚úÖ TTS —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
    else
        echo "‚ö†Ô∏è –î–µ—è–∫—ñ –º–æ–¥—É–ª—ñ –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏. –ú–æ–∂–ª–∏–≤—ñ –ø—Ä–æ–±–ª–µ–º–∏ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ TTS."
    fi
else
    # –ê–∫—Ç–∏–≤—É—î–º–æ —ñ—Å–Ω—É—é—á–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤
    source tts_venv/bin/activate
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å pygame
    if ! python3 -c "import pygame" 2>/dev/null; then
        echo "‚ö†Ô∏è –ú–æ–¥—É–ª—å pygame –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ..."
        pip install pygame
        if python3 -c "import pygame" 2>/dev/null; then
            echo "‚úÖ Pygame –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
        else
            echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ pygame"
        fi
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å gtts
    if ! python3 -c "import gtts" 2>/dev/null; then
        echo "‚ö†Ô∏è –ú–æ–¥—É–ª—å gtts –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ..."
        pip install gtts
        if python3 -c "import gtts" 2>/dev/null; then
            echo "‚úÖ gTTS –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
        else
            echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ gtts"
        fi
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å ukrainian_tts
    if ! python3 -c "import ukrainian_tts" 2>/dev/null; then
        echo "‚ö†Ô∏è –ú–æ–¥—É–ª—å ukrainian_tts –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ..."
        pip install git+https://github.com/robinhad/ukrainian-tts.git
        if python3 -c "import ukrainian_tts" 2>/dev/null; then
            echo "‚úÖ Ukrainian TTS –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
        else
            echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ ukrainian_tts"
        fi
    fi
fi

echo "üó£Ô∏è  –ó–∞–ø—É—Å–∫ Ukrainian TTS —Å–µ—Ä–≤–µ—Ä–∞..."
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π TTS –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞
echo "   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π TTS..."
TTS_VENV_PYTHON="$(pwd)/tts_venv/bin/python3"
$TTS_VENV_PYTHON check_tts_models.py > /tmp/tts_check.log 2>&1
TTS_CHECK_RESULT=$?

if [ $TTS_CHECK_RESULT -ne 0 ]; then
    echo "   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥–µ–ª—è–º–∏ TTS. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–µ: /tmp/tts_check.log"
    echo "   üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—É—Å–∫, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω fallback –Ω–∞ Google TTS"
else
    echo "   ‚úÖ –ú–æ–¥–µ–ª–∏ TTS –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
fi

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ Python –∏–∑ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
$TTS_VENV_PYTHON mcp_tts_server.py > /tmp/tts.log 2>&1 &
TTS_PID=$!
echo "   PID: $TTS_PID"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–æ—Ü–µ—Å –∑–∞–ø—É—â–µ–Ω–æ
if ! kill -0 $TTS_PID 2>/dev/null; then
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ TTS —Å–µ—Ä–≤–µ—Ä. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: tail -f /tmp/tts.log"
    kill $GOOSE_PID
    exit 1
fi

# –ü–æ—á–µ–∫–∞—î–º–æ —Ç—Ä–æ—Ö–∏, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏, —á–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –ø—Ä–æ—Ü–µ—Å –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É
sleep 2
if ! kill -0 $TTS_PID 2>/dev/null; then
    echo "‚ùå TTS —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É"
    echo "üìã –û—Å—Ç–∞–Ω–Ω—ñ —Ä—è–¥–∫–∏ –ª–æ–≥—É TTS —Å–µ—Ä–≤–µ—Ä–∞:"
    tail -10 /tmp/tts.log
    kill $GOOSE_PID
    exit 1
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ TTS
sleep 3

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ frontend
cd /Users/dev/Documents/GitHub/ATLAS/frontend

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è frontend
if [ ! -d "venv" ]; then
    echo "‚ö†Ô∏è Frontend –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—î–º–æ..."
    python3 -m venv venv
    source venv/bin/activate
    
    echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤ –¥–ª—è Frontend..."
    # –û–Ω–æ–≤–ª—é—î–º–æ pip
    pip install -U pip wheel setuptools
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–∞–∫–µ—Ç–∏
    pip install requests
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
    if python3 -c "import requests" 2>/dev/null; then
        echo "‚úÖ Frontend —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
    else
        echo "‚ö†Ô∏è –î–µ—è–∫—ñ –º–æ–¥—É–ª—ñ –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏. –ú–æ–∂–ª–∏–≤—ñ –ø—Ä–æ–±–ª–µ–º–∏ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ Frontend."
    fi
else
    # –ê–∫—Ç–∏–≤—É—î–º–æ —ñ—Å–Ω—É—é—á–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤
    source venv/bin/activate
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å requests
    if ! python3 -c "import requests" 2>/dev/null; then
        echo "‚ö†Ô∏è –ú–æ–¥—É–ª—å requests –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ..."
        pip install requests
        if python3 -c "import requests" 2>/dev/null; then
            echo "‚úÖ Requests –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
        else
            echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ requests"
        fi
    fi
fi

# –ó–∞–ø—É—Å–∫ frontend —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
echo "üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (port 8080)..."
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ Python –∏–∑ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
FRONTEND_VENV_PYTHON="$(pwd)/venv/bin/python3"
$FRONTEND_VENV_PYTHON atlas_minimal_live.py > /tmp/frontend.log 2>&1 &
FRONTEND_PID=$!
echo "   PID: $FRONTEND_PID"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–æ—Ü–µ—Å –∑–∞–ø—É—â–µ–Ω–æ
if ! kill -0 $FRONTEND_PID 2>/dev/null; then
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ Frontend. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: tail -f /tmp/frontend.log"
    kill $GOOSE_PID $TTS_PID
    exit 1
fi

# –ü–æ—á–µ–∫–∞—î–º–æ —Ç—Ä–æ—Ö–∏, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏, —á–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –ø—Ä–æ—Ü–µ—Å –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É
sleep 2
if ! kill -0 $FRONTEND_PID 2>/dev/null; then
    echo "‚ùå Frontend –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É"
    echo "üìã –û—Å—Ç–∞–Ω–Ω—ñ —Ä—è–¥–∫–∏ –ª–æ–≥—É Frontend:"
    tail -10 /tmp/frontend.log
    kill $GOOSE_PID $TTS_PID
    exit 1
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ frontend
sleep 1

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—ñ–≤
echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—ñ–≤..."

# –§—É–Ω–∫—Ü—ñ—è –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É –∑ —Ç–∞–π–º–∞—É—Ç–æ–º
wait_for_service() {
    local url=$1
    local name=$2
    local pid=$3
    local logfile=$4
    local max_attempts=${5:-30}  # 30 —Å–ø—Ä–æ–± –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    local attempt=1
    local success=false
    
    echo -n "   üîÑ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É $name..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s $url > /dev/null 2>&1; then
            echo " ‚úÖ –¥–æ—Å—Ç—É–ø–Ω–∏–π"
            success=true
            break
        fi
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–æ—Ü–µ—Å —â–µ –∂–∏–≤–∏–π
        if ! kill -0 $pid 2>/dev/null; then
            echo " ‚ùå –ø–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É!"
            echo "‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å $name (PID: $pid) –∑–∞–≤–µ—Ä—à–∏–≤—Å—è. –û—Å—Ç–∞–Ω–Ω—ñ —Ä—è–¥–∫–∏ –ª–æ–≥—É:"
            tail -10 $logfile
            return 1
        fi
        
        sleep 1
        attempt=$((attempt+1))
        echo -n "."
    done
    
    if [ "$success" = "false" ]; then
        echo " ‚ö†Ô∏è —Ç–∞–π–º–∞—É—Ç –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è"
        echo "   –°–µ—Ä–≤—ñ—Å $name –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î, –∞–ª–µ –ø—Ä–æ—Ü–µ—Å –∑–∞–ø—É—â–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: $logfile"
        return 2
    fi
    
    return 0
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ AI Agent —Å–µ—Ä–≤–µ—Ä–∞
wait_for_service "http://localhost:3000/health" "AI Agent" "$GOOSE_PID" "/tmp/goose.log" 20 || {
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ AI Agent. –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –ø—Ä–æ—Ü–µ—Å–∏..."
    kill $TTS_PID $FRONTEND_PID 2>/dev/null || true
    exit 1
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Frontend
wait_for_service "http://localhost:8080" "Frontend" "$FRONTEND_PID" "/tmp/frontend.log" 15 || {
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ Frontend. –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –ø—Ä–æ—Ü–µ—Å–∏..."
    kill $GOOSE_PID $TTS_PID 2>/dev/null || true
    exit 1
}

echo ""
echo "üéâ –°–ò–°–¢–ï–ú–ê ATLAS –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–ü–£–©–ï–ù–ê!"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "ü§ñ AI Agent Server:     http://localhost:3000   (PID: $GOOSE_PID)"
echo "üåê Web Interface:       http://localhost:8080   (PID: $FRONTEND_PID)"  
echo "üó£Ô∏è  Ukrainian TTS:       MCP Server Active      (PID: $TTS_PID)"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""
echo "üìã –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–û–ô:"
echo "   ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  kill $GOOSE_PID $FRONTEND_PID $TTS_PID"
echo "   üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: curl http://localhost:3000/health"
echo "   üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å:  –æ—Ç–∫—Ä—ã—Ç—å http://localhost:8080"
echo ""
echo "üìÑ –õ–û–ì–ò –°–ò–°–¢–ï–ú–´:"
echo "   ü§ñ AI Agent:    tail -f /tmp/goose.log"
echo "   üåê Frontend:    tail -f /tmp/frontend.log"
echo "   üó£Ô∏è  TTS Server:  tail -f /tmp/tts.log"
echo ""
echo "üí° –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ! –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080"
echo ""
echo "üñ•Ô∏è  –î–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –¥—Ä—É–≥–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:"
echo "    ./monitor.sh"
echo ""

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã ATLAS..."
    kill $GOOSE_PID $FRONTEND_PID $TTS_PID 2>/dev/null || true
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å–∏ –∑–∞ —ñ–º–µ–Ω–µ–º (–Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ PID –∑–º—ñ–Ω–∏–ª–∏—Å—è)
    pkill -f goosed 2>/dev/null || true
    pkill -f atlas_minimal 2>/dev/null || true
    pkill -f mcp_tts 2>/dev/null || true
    echo "‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    exit 0
}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–∏–≥–Ω–∞–ª—ñ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap cleanup SIGINT SIGTERM

echo "üîß –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "   kill $GOOSE_PID $FRONTEND_PID $TTS_PID"
echo ""

# –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É –ø—Ä–æ—Ü–µ—Å—É —Ç–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –ª–æ–≥—É —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
check_process_status() {
    local pid=$1
    local name=$2
    local logfile=$3
    
    if ! kill -0 $pid 2>/dev/null; then
        echo "‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å $name (PID: $pid) –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–æ!"
        echo "üìë –û—Å—Ç–∞–Ω–Ω—ñ 10 —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—É $name:"
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        tail -10 $logfile
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        return 1
    fi
    return 0
}

# –û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª)
while true; do
    all_running=true
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–µ–Ω –ø—Ä–æ—Ü–µ—Å –æ–∫—Ä–µ–º–æ
    check_process_status $GOOSE_PID "AI Agent" "/tmp/goose.log" || all_running=false
    check_process_status $FRONTEND_PID "Frontend" "/tmp/frontend.log" || all_running=false
    check_process_status $TTS_PID "TTS Server" "/tmp/tts.log" || all_running=false
    
    # –Ø–∫—â–æ —Ö–æ—á –æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å –∑–∞–≤–µ—Ä—à–∏–≤—Å—è - –∑—É–ø–∏–Ω—è—î–º–æ –≤—Å—é —Å–∏—Å—Ç–µ–º—É
    if [ "$all_running" = "false" ]; then
        echo "‚ö†Ô∏è  –û–¥–∏–Ω –∞–±–æ –∫—ñ–ª—å–∫–∞ –ø—Ä–æ—Ü–µ—Å—ñ–≤ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—è. –ó—É–ø–∏–Ω—è—î–º–æ —Å–∏—Å—Ç–µ–º—É..."
        cleanup
        break
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥
    sleep 5
done
