#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Goose
"""

import sys
import os
sys.path.append('/Users/dev/Documents/GitHub/ATLAS/frontend_new/app')

from goose_client import GooseClient

def test_goose():
    print("üß™ –¢–µ—Å—Ç—É—é –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Goose...")
    
    client = GooseClient()
    print(f"üìç Base URL: {client.base_url}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø –∑'—î–¥–Ω–∞–Ω–Ω—è
    is_web = client._is_web()
    is_goosed = client._is_goosed()
    
    print(f"üåê Is Web: {is_web}")
    print(f"üîß Is Goosed: {is_goosed}")
    
    if is_web:
        print("‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ Goose Web –Ω–∞ –ø–æ—Ä—Ç—ñ 3000")
        print("üîÑ –¢–µ—Å—Ç—É—é WebSocket –∑'—î–¥–Ω–∞–Ω–Ω—è...")
        
        try:
            result = client.send_reply("test_session", "–ü—Ä–∏–≤—ñ—Ç! –¶–µ —Ç–µ—Å—Ç –∑'—î–¥–Ω–∞–Ω–Ω—è.", timeout=10)
            print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            if result.get('success'):
                print("üéâ WebSocket –∑'—î–¥–Ω–∞–Ω–Ω—è –ø—Ä–∞—Ü—é—î!")
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ WebSocket: {result.get('error')}")
        except Exception as e:
            print(f"üí• –í–∏–Ω—è—Ç–æ–∫ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
    
    elif is_goosed:
        print("‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ Goosed API")
        print("üîÑ –¢–µ—Å—Ç—É—é SSE –∑'—î–¥–Ω–∞–Ω–Ω—è...")
        
        try:
            result = client.send_reply("test_session", "–ü—Ä–∏–≤—ñ—Ç! –¶–µ —Ç–µ—Å—Ç –∑'—î–¥–Ω–∞–Ω–Ω—è.", timeout=10)
            print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            if result.get('success'):
                print("üéâ SSE –∑'—î–¥–Ω–∞–Ω–Ω—è –ø—Ä–∞—Ü—é—î!")
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ SSE: {result.get('error')}")
        except Exception as e:
            print(f"üí• –í–∏–Ω—è—Ç–æ–∫ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
    
    else:
        print("‚ùå Goose –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î")

if __name__ == "__main__":
    test_goose()
