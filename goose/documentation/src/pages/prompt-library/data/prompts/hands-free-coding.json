{
  "id": "hands-free-coding",
  "title": "Hands-free Coding",
  "description": "Use your voice to code",
  "category": "technical",
  "job": "engineering",
  "example_prompt": "I'd like to speak instead of typing",
  "example_result": "I'll help you code using voice commands. I'm now listening for your voice input.\n\nExample Voice Commands:\n\n\"Create a new Python function called calculate total that takes a list of numbers and returns their sum\"\n\n```python\ndef calculate_total(numbers):\n    return sum(numbers)\n```\n\n\"Add input validation to check if the list is empty\"\n\n```python\ndef calculate_total(numbers):\n    if not numbers:\n        raise ValueError(\"List cannot be empty\")\n    return sum(numbers)\n```\n\n\"Add a docstring explaining the function\"\n\n```python\ndef calculate_total(numbers):\n    \"\"\"Calculate the sum of a list of numbers.\n    \n    Args:\n        numbers (list): A list of numeric values\n        \n    Returns:\n        float: The sum of all numbers in the list\n        \n    Raises:\n        ValueError: If the input list is empty\n    \"\"\"\n    if not numbers:\n        raise ValueError(\"List cannot be empty\")\n    return sum(numbers)\n```\n\n\"Add a test case for the function\"\n\n```python\ndef test_calculate_total():\n    # Test normal case\n    assert calculate_total([1, 2, 3]) == 6\n    \n    # Test floating points\n    assert calculate_total([1.5, 2.5]) == 4.0\n    \n    # Test empty list\n    try:\n        calculate_total([])\n        assert False, \"Expected ValueError\"\n    except ValueError:\n        pass\n```\n\nVoice Command Tips:\n1. Speak clearly and pause between commands\n2. Use programming terms as you would write them\n3. Say \"undo\" to revert last change\n4. Say \"run tests\" to execute test cases\n5. Common commands:\n   - \"Create function/class\"\n   - \"Add parameter/argument\"\n   - \"Import library\"\n   - \"Add try-catch block\"\n   - \"Create for loop\"\n   - \"Add comment\"\n\nI'm still listening. What would you like to code next?",
  "extensions": [
    {
      "name": "Speech",
      "command": "uvx -p 3.10.14 speech-mcp@latest",
      "is_builtin": false,
      "installation_notes": "[PortAudio](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/main/scripts/readme-gen/templates/install_portaudio.tmpl.rst#install-portaudio) is required for PyAudio to capture audio from your microphone",
      "environmentVariables": [

      ]
    },
    {
      "name": "Developer",
      "command": "developer",
      "is_builtin": true,
      "environmentVariables": [

      ]
    }
  ]
}
