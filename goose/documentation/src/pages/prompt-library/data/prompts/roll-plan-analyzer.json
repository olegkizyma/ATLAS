{
  "id": "dev-roll-plan-analyzer",
  "title": "Analyze Production Change ROLL Plans",
  "description": "Analyze and validate infrastructure change ROLL plans for production environments",
  "category": "technical",
  "job": "project-management",
  "example_prompt": "You are an expert in cloud infrastructure, security, and reliability engineering. Your goal is to analyze manual production changes documented in a ROLL plan, which governs high-risk changes to infrastructure and services that impact system state and production environments.\nA ROLL plan can contain any formatted change that any team is making that impacts production.\nI will provide a reference ROLL plan named\nROLL - SAMPLE.xml, which is a past real-world ROLL plan exported from JIRA. This is for context so you can understand\nthe structure and details of a typical ROLL plan.\nHowever, the actual ROLL plan you need to analyze will be uploaded separately.",
  "example_result": "I've analyzed the ROLL plan for the database migration change. Here's my comprehensive review:\n\n# ROLL Plan Analysis\n\n## 1. Change Overview\n\n```yaml\nChange Type: Database Migration\nEnvironment: Production\nImpact Level: High\nDuration: 4 hours\nTeams Involved:\n  - Database Operations\n  - Application Development\n  - Site Reliability\n  - Security\n```\n\n## 2. Risk Assessment\n\n### Critical Risks Identified:\n```\n1. Data Integrity\n   - Risk: Potential data loss during migration\n   - Mitigation: Point-in-time backup before change\n   - Verification: Checksum validation\n\n2. Service Availability\n   - Risk: Extended downtime during cutover\n   - Mitigation: Rolling update strategy\n   - Verification: Health check monitoring\n\n3. Performance Impact\n   - Risk: Degraded performance post-migration\n   - Mitigation: Performance baseline comparison\n   - Verification: Load testing pre-production\n```\n\n## 3. Prerequisites Check\n\n```diff\n+ Database backup completed and verified\n+ Rollback scripts tested in staging\n+ Performance baseline established\n+ Monitoring alerts configured\n- Load testing in pre-production pending\n- Security scan of new configuration needed\n```\n\n## 4. Step-by-Step Analysis\n\n### Pre-Change Steps:\n```sql\n-- Step 1: Backup Verification\nSELECT COUNT(*), SUM(CHECKSUM(*)) \nFROM critical_tables;\n\n-- Step 2: Connection Count\nSELECT COUNT(*) \nFROM pg_stat_activity \nWHERE state = 'active';\n\n-- Step 3: Replication Status\nSELECT * \nFROM pg_stat_replication;\n```\n\n### Main Migration Steps:\n```bash\n# Step 4: Schema Migration\n./migrate.sh --env=prod --version=v2.5.0\n\n# Step 5: Data Transfer\npsql -f transfer_data.sql\n\n# Step 6: Index Rebuild\n./rebuild_indexes.sh --parallel 4\n```\n\n### Validation Steps:\n```python\ndef validate_migration():\n    checks = [\n        check_row_counts(),\n        verify_constraints(),\n        test_replication(),\n        validate_performance()\n    ]\n    return all(checks)\n```\n\n## 5. Rollback Procedure\n\n```yaml\nTrigger Conditions:\n  - Data validation failure\n  - Performance degradation >20%\n  - Replication lag >10 minutes\n\nRollback Steps:\n  1. Stop application traffic\n  2. Restore from backup\n  3. Verify data integrity\n  4. Resume application traffic\n\nTime to Complete: 45 minutes\n```\n\n## 6. Monitoring Plan\n\n```json\n{\n  \"metrics\": {\n    \"database\": [\n      \"queries_per_second\",\n      \"average_response_time\",\n      \"active_connections\",\n      \"buffer_cache_hit_ratio\"\n    ],\n    \"application\": [\n      \"error_rate\",\n      \"latency_p95\",\n      \"success_rate\",\n      \"throughput\"\n    ],\n    \"system\": [\n      \"cpu_usage\",\n      \"memory_usage\",\n      \"disk_io\",\n      \"network_throughput\"\n    ]\n  },\n  \"alerts\": {\n    \"critical\": {\n      \"error_rate\": \">5%\",\n      \"latency\": \">500ms\",\n      \"replication_lag\": \">60s\"\n    },\n    \"warning\": {\n      \"error_rate\": \">2%\",\n      \"latency\": \">200ms\",\n      \"replication_lag\": \">30s\"\n    }\n  }\n}\n```\n\n## 7. Communication Plan\n\n```yaml\nPre-Change:\n  - Announcement: T-7 days\n  - Reminder: T-1 day\n  - Final notice: T-1 hour\n\nDuring Change:\n  - Status updates: Every 30 minutes\n  - Incident channel: #db-migration\n  - Emergency contacts listed\n\nPost-Change:\n  - Completion notice\n  - Performance report\n  - Incident review if needed\n```\n\n## 8. Recommendations\n\n1. Critical Items:\n```\n❗ Add performance acceptance criteria\n❗ Include specific rollback triggers\n❗ Detail data validation queries\n```\n\n2. Improvements:\n```\n- Add canary deployment step\n- Include query performance baselines\n- Expand monitoring metrics\n```\n\n3. Missing Elements:\n```\n- Backup retention policy\n- Compliance verification\n- Audit log requirements\n```\n\nWould you like me to:\n1. Generate detailed validation queries?\n2. Create monitoring dashboard?\n3. Expand rollback procedures?\n4. Add security controls?",
  "extensions": [
    {
      "name": "Developer",
      "command": "developer",
      "is_builtin": true,
      "environmentVariables": [

      ]
    },
    {
      "name": "Computer Controller",
      "command": "computercontroller",
      "is_builtin": true,
      "environmentVariables": [

      ]
    }
  ]
}
