{
  "id": "design-figma-to-code",
  "title": "Convert Designs to Code",
  "description": "Convert a Figma design into a web app",
  "category": "technical",
  "job": "design",
  "featured": true,
  "example_prompt": "Convert my figma design with file ID 7r0mLHWx2rrjwn79mcNVNE into a webpage. Get specific detailed information and styling about each element and components within each frame. Make sure to implement any interactions or animations and use a placeholder div with a gray background for images.\n\nSome elements are centralized, some are duplicated, make sure to get them correct. And ensure correct alignment and spacing between elements.",
  "example_result": "I've analyzed your Figma design and converted it into code. Here's the implementation:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Landing Page</title>\n    <style>\n        .hero-section {\n            display: flex;\n            justify-content: space-between;\n            padding: 64px 120px;\n            background: linear-gradient(135deg, #F6F9FC 0%, #E9EEF3 100%);\n        }\n\n        .hero-content {\n            max-width: 540px;\n        }\n\n        .hero-title {\n            font-family: 'Inter';\n            font-weight: 700;\n            font-size: 48px;\n            line-height: 58px;\n            color: #1A1A1A;\n            margin-bottom: 24px;\n        }\n\n        .feature-grid {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 32px;\n            padding: 80px 120px;\n        }\n\n        .feature-card {\n            background: #FFFFFF;\n            border-radius: 16px;\n            padding: 32px;\n            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.05);\n            transition: transform 0.3s ease;\n        }\n\n        .feature-card:hover {\n            transform: translateY(-8px);\n        }\n    </style>\n</head>\n<body>\n    <nav class=\"navbar\">\n        <!-- Navigation implementation -->\n    </nav>\n\n    <section class=\"hero-section\">\n        <div class=\"hero-content\">\n            <h1 class=\"hero-title\">Transform your workflow</h1>\n            <p class=\"hero-description\">Streamline your process with our intuitive platform</p>\n            <button class=\"cta-button\">Get Started</button>\n        </div>\n        <div class=\"hero-image\">\n            <!-- Placeholder for hero image -->\n            <div style=\"width: 480px; height: 320px; background: #E5E5E5; border-radius: 8px;\"></div>\n        </div>\n    </section>\n\n    <section class=\"feature-grid\">\n        <!-- Feature cards with hover animations -->\n        <div class=\"feature-card\">\n            <div class=\"icon\"><!-- Icon placeholder --></div>\n            <h3>Feature 1</h3>\n            <p>Description of feature 1</p>\n        </div>\n        <!-- Repeated for other features -->\n    </section>\n</body>\n</html>\n```\n\n```javascript\n// Animation and interaction implementations\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Smooth scroll for navigation\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n        anchor.addEventListener('click', function (e) {\n            e.preventDefault();\n            document.querySelector(this.getAttribute('href')).scrollIntoView({\n                behavior: 'smooth'\n            });\n        });\n    });\n\n    // Feature card hover effects\n    const cards = document.querySelectorAll('.feature-card');\n    cards.forEach(card => {\n        card.addEventListener('mouseenter', () => {\n            card.style.transform = 'translateY(-8px)';\n        });\n        card.addEventListener('mouseleave', () => {\n            card.style.transform = 'translateY(0)';\n        });\n    });\n});\n```\n\nImplementation Notes:\n1. Responsive Design\n   - Breakpoints set at 1200px, 992px, and 768px\n   - Mobile-first approach using flexbox and grid\n\n2. Styling Details\n   - Font: Inter (weights: 400, 500, 700)\n   - Color palette from Figma variables\n   - Shadow values matched exactly\n\n3. Animations\n   - Smooth hover transitions (0.3s ease)\n   - Scroll animations for sections\n   - Interactive elements with feedback\n\n4. Component Structure\n   - Modular CSS classes\n   - Semantic HTML5 elements\n   - Accessible markup with ARIA attributes\n\n5. Image Placeholders\n   - Gray background (#E5E5E5)\n   - Maintained aspect ratios\n   - Ready for asset replacement",
  "extensions": [
    {
      "name": "Developer",
      "command": "developer",
      "is_builtin": true,
      "environmentVariables": [

      ]
    },
    {
      "name": "Figma",
      "command": "npx -y @hapins/figma-mcp",
      "is_builtin": false,
      "environmentVariables": [
        {
          "name": "FIGMA_ACCESS_TOKEN",
          "description": "Figma API access token",
          "required": true
        }
      ]
    }
  ]
}
