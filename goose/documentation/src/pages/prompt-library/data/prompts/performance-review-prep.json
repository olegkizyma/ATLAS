{
  "id": "developer-review-prep",
  "title": "Structure Your Performance Review",
  "description": "Sort collected feedback into a well-organized performance review",
  "category": "business",
  "job": "project-management",
  "example_prompt": "Create a web app that will take feedback and sort it into custom performance dimensions to populate a performance evaluation. The app should:\n- Allow users to define their review dimensions (e.g., Leadership, Technical Skills, Innovation)\n- Accept feedback text through input or file upload\n- Sort feedback into the defined dimensions\n- Export the organized feedback for performance reviews",
  "example_result": "I'll help you create a performance review organization app. Here's the implementation:\n\n1. Frontend Implementation (React):\n\n```jsx\n// src/components/ReviewOrganizer.js\nimport React, { useState } from 'react';\nimport { TextField, Button, Card, Chip } from '@mui/material';\n\nconst ReviewOrganizer = () => {\n  const [dimensions, setDimensions] = useState([\n    { id: 1, name: 'Leadership' },\n    { id: 2, name: 'Technical Skills' },\n    { id: 3, name: 'Innovation' }\n  ]);\n\n  const [feedback, setFeedback] = useState('');\n  const [organizedFeedback, setOrganizedFeedback] = useState({});\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl mb-4\">Performance Review Organizer</h1>\n      \n      {/* Dimension Management */}\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl mb-2\">Review Dimensions</h2>\n        <div className=\"flex flex-wrap gap-2\">\n          {dimensions.map(dim => (\n            <Chip\n              key={dim.id}\n              label={dim.name}\n              onDelete={() => handleDeleteDimension(dim.id)}\n              className=\"m-1\"\n            />\n          ))}\n          <Button\n            variant=\"outlined\"\n            onClick={() => setShowDimensionDialog(true)}\n          >\n            Add Dimension\n          </Button>\n        </div>\n      </section>\n\n      {/* Feedback Input */}\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl mb-2\">Input Feedback</h2>\n        <TextField\n          multiline\n          rows={4}\n          fullWidth\n          value={feedback}\n          onChange={(e) => setFeedback(e.target.value)}\n          placeholder=\"Paste feedback text here...\"\n        />\n        <input\n          type=\"file\"\n          accept=\".txt,.doc,.docx\"\n          onChange={handleFileUpload}\n          className=\"mt-2\"\n        />\n      </section>\n\n      {/* Organized Feedback */}\n      <section>\n        <h2 className=\"text-xl mb-2\">Organized Feedback</h2>\n        {dimensions.map(dim => (\n          <Card key={dim.id} className=\"p-4 mb-4\">\n            <h3 className=\"font-bold mb-2\">{dim.name}</h3>\n            <ul className=\"list-disc pl-4\">\n              {organizedFeedback[dim.id]?.map((item, i) => (\n                <li key={i} className=\"mb-2\">{item}</li>\n              ))}\n            </ul>\n          </Card>\n        ))}\n      </section>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleExport}\n        className=\"mt-4\"\n      >\n        Export Review\n      </Button>\n    </div>\n  );\n};\n```\n\n2. Backend Implementation (Node.js/Express):\n\n```javascript\n// src/server/feedbackAnalyzer.js\nconst natural = require('natural');\nconst classifier = new natural.BayesClassifier();\n\nclass FeedbackAnalyzer {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.trainClassifier();\n  }\n\n  trainClassifier() {\n    // Training data for each dimension\n    const trainingData = {\n      Leadership: [\n        'leads by example',\n        'motivates team',\n        'decision making',\n        'delegation',\n        'team management'\n      ],\n      'Technical Skills': [\n        'problem solving',\n        'code quality',\n        'technical knowledge',\n        'debugging',\n        'architecture'\n      ],\n      Innovation: [\n        'creative solutions',\n        'new ideas',\n        'process improvement',\n        'initiative',\n        'experimentation'\n      ]\n    };\n\n    // Train classifier with examples\n    Object.entries(trainingData).forEach(([dimension, examples]) => {\n      examples.forEach(example => {\n        classifier.addDocument(example, dimension);\n      });\n    });\n\n    classifier.train();\n  }\n\n  analyzeFeedback(feedback) {\n    // Split feedback into sentences\n    const sentences = feedback.match(/[^.!?]+[.!?]+/g) || [feedback];\n\n    // Categorize each sentence\n    const categorized = {};\n    this.dimensions.forEach(dim => {\n      categorized[dim.id] = [];\n    });\n\n    sentences.forEach(sentence => {\n      const dimension = classifier.classify(sentence);\n      const dimId = this.dimensions.find(d => d.name === dimension)?.id;\n      if (dimId) {\n        categorized[dimId].push(sentence.trim());\n      }\n    });\n\n    return categorized;\n  }\n}\n```\n\n3. Export Template:\n\n```markdown\n# Performance Review Summary\nDate: {{date}}\nReviewer: {{reviewer}}\n\n## Leadership\n{{#leadership}}\n- {{.}}\n{{/leadership}}\n\n## Technical Skills\n{{#technical}}\n- {{.}}\n{{/technical}}\n\n## Innovation\n{{#innovation}}\n- {{.}}\n{{/innovation}}\n\n## Additional Notes\n{{notes}}\n\n## Development Plan\n1. Areas of Excellence:\n   {{#excellence}}\n   - {{.}}\n   {{/excellence}}\n\n2. Areas for Growth:\n   {{#growth}}\n   - {{.}}\n   {{/growth}}\n\n3. Action Items:\n   {{#actions}}\n   - {{.}}\n   {{/actions}}\n```\n\n4. Sample Usage:\n\nInput Feedback:\n```\nSarah has shown excellent leadership in the recent cloud migration project. \nShe effectively managed team resources and deadlines. Her technical \nknowledge of AWS services is impressive, and she implemented several \ninnovative solutions to reduce costs. Team members appreciate her clear \ncommunication and mentoring. She introduced a new CI/CD process that \nimproved deployment efficiency by 40%.\n```\n\nOrganized Output:\n```\nLeadership:\n- Effectively managed team resources and deadlines\n- Team members appreciate her clear communication and mentoring\n\nTechnical Skills:\n- Technical knowledge of AWS services is impressive\n- Implemented CI/CD process improving deployment efficiency\n\nInnovation:\n- Implemented several innovative solutions to reduce costs\n- Introduced new CI/CD process with 40% efficiency improvement\n```\n\n5. Features:\n\n```\n✓ Custom dimensions\n✓ Bulk text processing\n✓ File upload support\n✓ Natural language processing\n✓ Export to multiple formats\n✓ Data persistence\n✓ Multi-user support\n```\n\nWould you like me to:\n1. Add more training data?\n2. Implement additional export formats?\n3. Add collaborative features?\n4. Create automated reminders?",
  "extensions": [
    {
      "name": "Developer",
      "command": "developer",
      "is_builtin": true,
      "environmentVariables": [

      ]
    },
    {
      "name": "Google Drive",
      "command": "npx -y @modelcontextprotocol/server-gdrive",
      "is_builtin": false,
      "environmentVariables": [
        {
          "name": "GDRIVE_OAUTH_PATH",
          "description": "/Users/<username>/.config/gcp-oauth.keys.json / ",
          "required": true
        },
        {
          "name": "GDRIVE_CREDENTIALS_PATH",
          "description": "/Users/<username>/.config/.gdrive-server-credentials.json /",
          "required": true
        }
      ]
    }
  ]
}
