#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Rust Ukrainian TTS MCP —Å–µ—Ä–≤–µ—Ä–∞
"""
import asyncio
import json
import subprocess
import sys

async def test_rust_tts():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Rust TTS —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ MCP –ø—Ä–æ—Ç–æ–∫–æ–ª"""
    print("üß™ Testing Rust Ukrainian TTS MCP Server...")
    
    # MCP —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    init_msg = {
        "jsonrpc": "2.0",
        "id": 1,
        "method": "initialize",
        "params": {
            "protocolVersion": "2024-10-07",
            "capabilities": {},
            "clientInfo": {
                "name": "test-client",
                "version": "1.0.0"
            }
        }
    }
    
    # –í–∏–∫–ª–∏–∫ TTS
    tts_msg = {
        "jsonrpc": "2.0",
        "id": 2,
        "method": "tools/call",
        "params": {
            "name": "say_tts",
            "arguments": {
                "text": "–ü—Ä–∏–≤—ñ—Ç! –¶–µ —Ç–µ—Å—Ç —á–µ—Ä–µ–∑ Rust MCP —Å–µ—Ä–≤–µ—Ä –∑ –≥–æ–ª–æ—Å–æ–º –¢–µ—Ç—è–Ω–∏!",
                "voice": "tetiana",
                "lang": "uk"
            }
        }
    }
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    process = subprocess.Popen(
        ['./target/release/mcp-tts-ukrainian'],
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True
    )
    
    try:
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
        init_json = json.dumps(init_msg) + '\n'
        print(f"üì§ Sending: {init_json.strip()}")
        
        process.stdin.write(init_json)
        process.stdin.flush()
        
        # –ß–∏—Ç–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        response = process.stdout.readline()
        print(f"üì• Response: {response.strip()}")
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ TTS –∑–∞–ø–∏—Ç
        tts_json = json.dumps(tts_msg) + '\n'
        print(f"üì§ Sending: {tts_json.strip()}")
        
        process.stdin.write(tts_json)
        process.stdin.flush()
        
        # –ß–∏—Ç–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å TTS
        response = process.stdout.readline()
        print(f"üì• TTS Response: {response.strip()}")
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        
    finally:
        process.terminate()
        process.wait()

if __name__ == "__main__":
    asyncio.run(test_rust_tts())
