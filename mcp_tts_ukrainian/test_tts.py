#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Ukrainian TTS MCP Server
============================

–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ TTS —Å–µ—Ä–≤–µ—Ä–∞
"""

import asyncio
import json
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

from mcp_tts_server import UkrainianTTSEngine

async def test_tts():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è TTS –¥–≤–∏–∂–∫–∞"""
    print("üß™ Starting Ukrainian TTS Test...")
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–≤–∏–∂–∫–∞
    engine = UkrainianTTSEngine()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É
    print("\nüìä Engine Status:")
    print(f"Ukrainian TTS: {'‚úÖ' if engine.ukrainian_tts else '‚ùå'}")
    print(f"Pygame Audio: {'‚úÖ' if engine.pygame_initialized else '‚ùå'}")
    
    # –¢–µ—Å—Ç–æ–≤—ñ —Ñ—Ä–∞–∑–∏
    test_phrases = [
        ("–ü—Ä–∏–≤—ñ—Ç! –¶–µ —Ç–µ—Å—Ç —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ TTS.", "mykyta", "uk"),
        ("–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ! –ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞!", "tetiana", "uk"),
        ("Hello! This is an English test.", None, "en"),
        ("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ä—É—Å—Å–∫–∏–π —Ç–µ—Å—Ç.", None, "ru"),
    ]
    
    print("\nüéôÔ∏è Testing TTS...")
    
    for i, (text, voice, lang) in enumerate(test_phrases, 1):
        print(f"\n{i}. Testing: {text[:30]}...")
        print(f"   Voice: {voice or 'default'}, Lang: {lang}")
        
        try:
            result = await engine.speak(text, voice or "mykyta", lang)
            
            if result["status"] == "success":
                print(f"   ‚úÖ Success: {result['engine']}")
            else:
                print(f"   ‚ùå Failed: {result['message']}")
                
        except Exception as e:
            print(f"   üí• Error: {e}")
        
        # –ü–∞—É–∑–∞ –º—ñ–∂ —Ç–µ—Å—Ç–∞–º–∏
        await asyncio.sleep(1)
    
    print("\nüèÅ Test completed!")

if __name__ == "__main__":
    asyncio.run(test_tts())
