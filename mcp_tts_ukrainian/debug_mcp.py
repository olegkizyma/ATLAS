#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–∞
"""

import json
import subprocess
import time
import os

def debug_mcp_server():
    """–î–µ–±–∞–≥ MCP —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üîß Debugging MCP Server...")
    
    os.chdir("/Users/dev/Documents/Atlas-mcp/mcp_tts_ukrainian")
    
    try:
        process = subprocess.Popen(
            ["bash", "start_fixed.sh"],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ß–µ–∫–∞—î–º–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å
        time.sleep(3)
        
        # –ß–∏—Ç–∞—î–º–æ stderr –¥–ª—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        stderr_output = ""
        try:
            stderr_output = process.stderr.read()
            print("STDERR OUTPUT:")
            print(stderr_output)
        except:
            pass
        
        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ initialize
        init_request = {
            "jsonrpc": "2.0",
            "id": 1,
            "method": "initialize",
            "params": {
                "protocolVersion": "2024-11-05",
                "capabilities": {},
                "clientInfo": {"name": "debug-client", "version": "1.0.0"}
            }
        }
        
        request_line = json.dumps(init_request) + "\n"
        print("SENDING REQUEST:")
        print(request_line)
        
        process.stdin.write(request_line)
        process.stdin.flush()
        
        # –ß–µ–∫–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        time.sleep(2)
        
        # –ß–∏—Ç–∞—î–º–æ stdout
        stdout_lines = []
        try:
            while True:
                line = process.stdout.readline()
                if not line:
                    break
                stdout_lines.append(line.strip())
                if len(stdout_lines) > 10:  # –û–±–º–µ–∂—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—ñ–Ω—ñ–π
                    break
        except:
            pass
        
        print("STDOUT LINES:")
        for i, line in enumerate(stdout_lines):
            print(f"Line {i}: {repr(line)}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—É
        poll_result = process.poll()
        print(f"Process status: {poll_result}")
        
        # –ó–∞–≤–µ—Ä—à—É—î–º–æ –ø—Ä–æ—Ü–µ—Å
        process.terminate()
        try:
            process.wait(timeout=5)
        except:
            process.kill()
        
    except Exception as e:
        print(f"Debug failed: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_mcp_server()
