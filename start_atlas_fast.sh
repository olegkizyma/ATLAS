#!/bin/bash

# ATLAS System Startup Script (Fast Start)
# –°–∫—Ä–∏–ø—Ç —à–≤–∏–¥–∫–æ–≥–æ –∑–∞–ø—É—Å–∫—É —Å–∏—Å—Ç–µ–º–∏ ATLAS (–±–µ–∑ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—ó)
# –í–∫–ª—é—á–∞—î: Goose AI Agent, Frontend Interface

# –§—É–Ω–∫—Ü—ñ—è –∑—É–ø–∏–Ω–∫–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤
stop_processes() {
    echo "üõë –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏..."
    pkill -f goosed && echo "   ‚úì –ó—É–ø–∏–Ω–µ–Ω–æ AI Agent"
    pkill -f atlas_minimal && echo "   ‚úì –ó—É–ø–∏–Ω–µ–Ω–æ External Frontend"
    sleep 3
    echo "‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    echo ""
}

# –°–ø–æ—á–∞—Ç–∫—É –∑—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏
stop_processes

echo "üöÄ –®–≤–∏–¥–∫–∏–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–∏ ATLAS..."
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "ü§ñ AI Agent + üåê External Frontend"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é goose
cd /Users/dev/Documents/GitHub/ATLAS/goose

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å—Ä–µ–¥—ã Hermit
echo "‚öôÔ∏è  –ê–∫—Ç–∏–≤–∞—Ü—ñ—è —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ —Ä–æ–∑—Ä–æ–±–∫–∏ Hermit..."
source bin/activate-hermit

if [ $? -ne 0 ]; then
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ Hermit —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ"
    exit 1
fi

## ---------------- AI Agent (goosed) run ----------------
# –†–µ–∂–∏–º —Å–±–æ—Ä–∫–∏ (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å: export GOOSE_BUILD_MODE=debug)
BUILD_MODE=${GOOSE_BUILD_MODE:-release}
GOOSED_PATH="target/${BUILD_MODE}/goosed"

echo "üîç –†–µ–∂–∏–º: ${BUILD_MODE} (–±—ñ–Ω–∞—Ä–Ω–∏–π —Ñ–∞–π–ª: ${GOOSED_PATH})"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
if [ ! -f "${GOOSED_PATH}" ]; then
    echo "‚ùå –ë—ñ–Ω–∞—Ä–Ω–∏–π —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: ${GOOSED_PATH}"
    echo "üí° –°–ø–æ—á–∞—Ç–∫—É —Å–∫–æ–º–ø—ñ–ª—é–π—Ç–µ —Å–∏—Å—Ç–µ–º—É: ./build_atlas.sh"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π
if [ ! -x "${GOOSED_PATH}" ]; then
    echo "üîß –†–æ–±–ª—é —Ñ–∞–π–ª –≤–∏–∫–æ–Ω—É–≤–∞–Ω–∏–º..."
    chmod +x "${GOOSED_PATH}"
fi

echo "‚úÖ AI Agent –≥–æ—Ç–æ–≤–∏–π –¥–æ –∑–∞–ø—É—Å–∫—É"

# –ó–∞–ø—É—Å–∫ goosed –≤ —Ñ–æ–Ω–µ
echo "ü§ñ –ó–∞–ø—É—Å–∫ AI Agent —Å–µ—Ä–≤–µ—Ä–∞ (port 3000)..."
"./${GOOSED_PATH}" agent > /tmp/goose.log 2>&1 &
GOOSE_PID=$!
echo "   PID: $GOOSE_PID"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–æ—Ü–µ—Å –∑–∞–ø—É—â–µ–Ω–æ
if ! kill -0 $GOOSE_PID 2>/dev/null; then
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ AI Agent. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: tail -f /tmp/goose.log"
    exit 1
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ goose
echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó AI Agent..."
sleep 3

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ frontend
cd /Users/dev/Documents/GitHub/ATLAS/frontend

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è frontend
if [ ! -d "venv" ]; then
    echo "‚ö†Ô∏è Frontend –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—î–º–æ..."
    python3 -m venv venv
    source venv/bin/activate
    
    echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤ –¥–ª—è Frontend..."
    # –û–Ω–æ–≤–ª—é—î–º–æ pip
    pip install -U pip wheel setuptools
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–∞–∫–µ—Ç–∏
    pip install requests
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
    if python3 -c "import requests" 2>/dev/null; then
        echo "‚úÖ Frontend —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
    else
        echo "‚ö†Ô∏è –î–µ—è–∫—ñ –º–æ–¥—É–ª—ñ –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏. –ú–æ–∂–ª–∏–≤—ñ –ø—Ä–æ–±–ª–µ–º–∏ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ Frontend."
    fi
else
    # –ê–∫—Ç–∏–≤—É—î–º–æ —ñ—Å–Ω—É—é—á–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤
    source venv/bin/activate
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å requests
    if ! python3 -c "import requests" 2>/dev/null; then
        echo "‚ö†Ô∏è –ú–æ–¥—É–ª—å requests –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ..."
        pip install requests
        if python3 -c "import requests" 2>/dev/null; then
            echo "‚úÖ Requests –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
        else
            echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ requests"
        fi
    fi
fi

# –ó–∞–ø—É—Å–∫ frontend —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
echo "üåê –ó–∞–ø—É—Å–∫ –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É (port 8080)..."
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ Python –∏–∑ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
FRONTEND_VENV_PYTHON="$(pwd)/venv/bin/python3"
$FRONTEND_VENV_PYTHON atlas_minimal_live.py > /tmp/frontend.log 2>&1 &
FRONTEND_PID=$!
echo "   PID: $FRONTEND_PID"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–æ—Ü–µ—Å –∑–∞–ø—É—â–µ–Ω–æ
if ! kill -0 $FRONTEND_PID 2>/dev/null; then
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ External Frontend. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: tail -f /tmp/frontend.log"
    kill $GOOSE_PID
    exit 1
fi

# –ü–æ—á–µ–∫–∞—î–º–æ —Ç—Ä–æ—Ö–∏, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏, —á–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –ø—Ä–æ—Ü–µ—Å –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É
sleep 2
if ! kill -0 $FRONTEND_PID 2>/dev/null; then
    echo "‚ùå External Frontend –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É"
    echo "üìã –û—Å—Ç–∞–Ω–Ω—ñ —Ä—è–¥–∫–∏ –ª–æ–≥—É External Frontend:"
    tail -10 /tmp/frontend.log
    kill $GOOSE_PID
    exit 1
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ frontend
echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Frontend..."
sleep 1

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—ñ–≤
echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—ñ–≤..."

# –§—É–Ω–∫—Ü—ñ—è –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É –∑ —Ç–∞–π–º–∞—É—Ç–æ–º
wait_for_service() {
    local url=$1
    local name=$2
    local pid=$3
    local logfile=$4
    local max_attempts=${5:-30}  # 30 —Å–ø—Ä–æ–± –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    local attempt=1
    local success=false
    
    echo -n "   üîÑ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É $name..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s $url > /dev/null 2>&1; then
            echo " ‚úÖ –¥–æ—Å—Ç—É–ø–Ω–∏–π"
            success=true
            break
        fi
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–æ—Ü–µ—Å —â–µ –∂–∏–≤–∏–π
        if ! kill -0 $pid 2>/dev/null; then
            echo " ‚ùå –ø–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É!"
            echo "‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å $name (PID: $pid) –∑–∞–≤–µ—Ä—à–∏–≤—Å—è. –û—Å—Ç–∞–Ω–Ω—ñ —Ä—è–¥–∫–∏ –ª–æ–≥—É:"
            tail -10 $logfile
            return 1
        fi
        
        sleep 1
        attempt=$((attempt+1))
        echo -n "."
    done
    
    if [ "$success" = "false" ]; then
        echo " ‚ö†Ô∏è —Ç–∞–π–º–∞—É—Ç –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è"
        echo "   –°–µ—Ä–≤—ñ—Å $name –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î, –∞–ª–µ –ø—Ä–æ—Ü–µ—Å –∑–∞–ø—É—â–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: $logfile"
        return 2
    fi
    
    return 0
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ AI Agent —Å–µ—Ä–≤–µ—Ä–∞
wait_for_service "http://localhost:3000/health" "AI Agent" "$GOOSE_PID" "/tmp/goose.log" 20 || {
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ AI Agent. –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –ø—Ä–æ—Ü–µ—Å–∏..."
    kill $FRONTEND_PID 2>/dev/null || true
    exit 1
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ External Frontend
wait_for_service "http://localhost:8080" "External Frontend" "$FRONTEND_PID" "/tmp/frontend.log" 15 || {
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ External Frontend. –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –ø—Ä–æ—Ü–µ—Å–∏..."
    kill $GOOSE_PID 2>/dev/null || true
    exit 1
}

echo ""
echo "üéâ –°–ò–°–¢–ï–ú–ê ATLAS –£–°–ü–Ü–®–ù–û –ó–ê–ü–£–©–ï–ù–ê!"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "ü§ñ AI Agent Server:     http://localhost:3000   (PID: $GOOSE_PID)"
echo "üåê External Web UI:     http://localhost:8080   (PID: $FRONTEND_PID)"  
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""
echo "üìã –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –°–ò–°–¢–ï–ú–û–Æ:"
echo "   ‚èπÔ∏è  –ó—É–ø–∏–Ω–∫–∞:  kill $GOOSE_PID $FRONTEND_PID"
echo "   üìä –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥: curl http://localhost:3000/health"
echo "   üåê –í–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å:  –≤—ñ–¥–∫—Ä–∏—Ç–∏ http://localhost:8080"
echo ""
echo "üìÑ –õ–û–ì–ò –°–ò–°–¢–ï–ú–ò:"
echo "   ü§ñ AI Agent:    tail -f /tmp/goose.log"
echo "   üåê External Frontend: tail -f /tmp/frontend.log"
echo ""
echo "üí° –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ —Ä–æ–±–æ—Ç–∏! –í—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:8080"
echo ""

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    echo ""
    echo "üõë –ó—É–ø–∏–Ω–∫–∞ —Å–∏—Å—Ç–µ–º–∏ ATLAS..."
    kill $GOOSE_PID $FRONTEND_PID 2>/dev/null || true
    # –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å–∏ –∑–∞ —ñ–º–µ–Ω–µ–º (–Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ PID –∑–º—ñ–Ω–∏–ª–∏—Å—è)
    pkill -f goosed 2>/dev/null || true
    pkill -f atlas_minimal 2>/dev/null || true
    echo "‚úÖ –í—Å—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –∑—É–ø–∏–Ω–µ–Ω–æ"
    exit 0
}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–∏–≥–Ω–∞–ª—ñ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap cleanup SIGINT SIGTERM

echo "üîß –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω–æ. –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –∞–±–æ –≤–∏–∫–æ–Ω–∞–π—Ç–µ:"
echo "   kill $GOOSE_PID $FRONTEND_PID"
echo ""

# –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É –ø—Ä–æ—Ü–µ—Å—É —Ç–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –ª–æ–≥—É —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
check_process_status() {
    local pid=$1
    local name=$2
    local logfile=$3
    
    if ! kill -0 $pid 2>/dev/null; then
        echo "‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å $name (PID: $pid) –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–æ!"
        echo "üìë –û—Å—Ç–∞–Ω–Ω—ñ 10 —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—É $name:"
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        tail -10 $logfile
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        return 1
    fi
    return 0
}

# –û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª)
while true; do
    all_running=true
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–µ–Ω –ø—Ä–æ—Ü–µ—Å –æ–∫—Ä–µ–º–æ
    check_process_status $GOOSE_PID "AI Agent" "/tmp/goose.log" || all_running=false
    check_process_status $FRONTEND_PID "External Frontend" "/tmp/frontend.log" || all_running=false
    
    # –Ø–∫—â–æ —Ö–æ—á –æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å –∑–∞–≤–µ—Ä—à–∏–≤—Å—è - –∑—É–ø–∏–Ω—è—î–º–æ –≤—Å—é —Å–∏—Å—Ç–µ–º—É
    if [ "$all_running" = "false" ]; then
        echo "‚ö†Ô∏è  –û–¥–∏–Ω –∞–±–æ –∫—ñ–ª—å–∫–∞ –ø—Ä–æ—Ü–µ—Å—ñ–≤ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—è. –ó—É–ø–∏–Ω—è—î–º–æ —Å–∏—Å—Ç–µ–º—É..."
        cleanup
        break
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥
    sleep 5
done
